#pragma once

/*==============================================================================
==============================================================================*/

#include <stdio.h>
#include <atomic>
#include "someMessage.h"
#include "someClass1.h"
#include "risTimeMarker.h"
#include "LFBackoff.h"

//******************************************************************************
//******************************************************************************
//******************************************************************************


namespace Some
{

//******************************************************************************
//******************************************************************************
//******************************************************************************

class Tester
{
public:
   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   unsigned long long   mCount;

   Ris::TrialTimeMarker mMarkerTest1;
   Ris::TrialTimeMarker mMarkerTest2;
   double               mMeanTimeTest1;
   double               mMeanTimeTest2;

   Some::Class1A*       mClass1A;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   Tester();

   void initialize(unsigned aIdent=0);
   void finalize();
   void show();

   void startTrial();
   void finishTrial();

   void test1 (int aNumIter);
   void test2 (int aNumIter);
   void test3 (int aNumIter);
   void test4 (int aNumIter);
   void test  (int aNumIter);
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace

